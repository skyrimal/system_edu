<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.system_edu.mapper.SysModelClassAssignmentMapper">
    <resultMap id="BaseResultMap" type="com.education.system_edu.pojo.SysModelClassAssignment">
        <id column="code" jdbcType="VARCHAR" property="code"/>
        <result column="class_code" jdbcType="VARCHAR" property="classCode"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="context" jdbcType="VARCHAR" property="context"/>
        <result column="sys_college_node_code" jdbcType="VARCHAR" property="sysCollegeNodeCode"/>
        <result column="sys_college_node_type" jdbcType="SMALLINT" property="sysCollegeNodeType"/>
        <result column="starttime" jdbcType="TIMESTAMP" property="starttime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endtime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <resultMap id="StudentSignInfo" type="com.education.system_edu.pojo.output.StudentSignInfo">
        <id column="code" jdbcType="VARCHAR" property="code"/>
        <result column="student_code" jdbcType="VARCHAR" property="loginCode"/>
        <result column="class_code" jdbcType="VARCHAR" property="classCode"/>
        <result column="user_name" jdbcType="VARCHAR" property="name"/>
        <result column="m" jdbcType="SMALLINT" property="m"/>
        <result column="d" jdbcType="VARCHAR" property="d"/>
        <result column="f" jdbcType="VARCHAR" property="f"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    code, class_code, title, type, context, sys_college_node_code, sys_college_node_type, 
    starttime, endTime, create_by, create_date, update_by, update_date
  </sql>

    <!-- selectStudentSignInfo -->
    <select id="selectStudentSignInfo" parameterType="java.lang.String" resultMap="StudentSignInfo">
      SELECT DISTINCT
      sign.`code`,
      sign.class_code,
      signaction.student_code ,
      student.user_name,
      m.`name` AS m,
      d.`name` AS d,
      f.`name` AS f,
      sign.starttime
      FROM
      sys_model_class_assignment AS sign
      INNER JOIN student_sign_action AS signaction ON sign.`code` = signaction.assignment_code
      INNER JOIN all_users AS student ON signaction.student_code = student.login_code
      LEFT JOIN sys_model_class ON sign.class_code = sys_model_class.class_code
      LEFT JOIN sys_data_tree AS m ON sys_model_class.sys_college_node_code = m.`code`
      LEFT JOIN sys_data_tree AS d ON m.parent_node = d.`code` AND d.parent_node = sign.type
      LEFT JOIN sys_data_tree AS f ON d.parent_node = f.`code`
      WHERE
      sign.endTime >=  NOW() AND sign.create_by = #{loginCode,jdbcType=VARCHAR}
      ORDER BY
      sign.starttime DESC;
  </select>


  <select id="selectByExample" parameterType="com.education.system_edu.pojo.SysModelClassAssignmentExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_model_class_assignment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_model_class_assignment
        where code = #{code,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_model_class_assignment
    where code = #{code,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.education.system_edu.pojo.SysModelClassAssignmentExample">
        delete from sys_model_class_assignment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.education.system_edu.pojo.SysModelClassAssignment">
    insert into sys_model_class_assignment (code, class_code, title, 
      type, context, sys_college_node_code, 
      sys_college_node_type, starttime, endTime, 
      create_by, create_date, update_by, 
      update_date)
    values (#{code,jdbcType=VARCHAR}, #{classCode,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=SMALLINT}, #{context,jdbcType=VARCHAR}, #{sysCollegeNodeCode,jdbcType=VARCHAR}, 
      #{sysCollegeNodeType,jdbcType=SMALLINT}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.education.system_edu.pojo.SysModelClassAssignment">
        insert into sys_model_class_assignment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="classCode != null">
                class_code,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="context != null">
                context,
            </if>
            <if test="sysCollegeNodeCode != null">
                sys_college_node_code,
            </if>
            <if test="sysCollegeNodeType != null">
                sys_college_node_type,
            </if>
            <if test="starttime != null">
                starttime,
            </if>
            <if test="endtime != null">
                endTime,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="classCode != null">
                #{classCode,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="context != null">
                #{context,jdbcType=VARCHAR},
            </if>
            <if test="sysCollegeNodeCode != null">
                #{sysCollegeNodeCode,jdbcType=VARCHAR},
            </if>
            <if test="sysCollegeNodeType != null">
                #{sysCollegeNodeType,jdbcType=SMALLINT},
            </if>
            <if test="starttime != null">
                #{starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.education.system_edu.pojo.SysModelClassAssignmentExample"
            resultType="java.lang.Long">
        select count(*) from sys_model_class_assignment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_model_class_assignment
        <set>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.classCode != null">
                class_code = #{record.classCode,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=SMALLINT},
            </if>
            <if test="record.context != null">
                context = #{record.context,jdbcType=VARCHAR},
            </if>
            <if test="record.sysCollegeNodeCode != null">
                sys_college_node_code = #{record.sysCollegeNodeCode,jdbcType=VARCHAR},
            </if>
            <if test="record.sysCollegeNodeType != null">
                sys_college_node_type = #{record.sysCollegeNodeType,jdbcType=SMALLINT},
            </if>
            <if test="record.starttime != null">
                starttime = #{record.starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endtime != null">
                endTime = #{record.endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_model_class_assignment
        set code = #{record.code,jdbcType=VARCHAR},
        class_code = #{record.classCode,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=SMALLINT},
        context = #{record.context,jdbcType=VARCHAR},
        sys_college_node_code = #{record.sysCollegeNodeCode,jdbcType=VARCHAR},
        sys_college_node_type = #{record.sysCollegeNodeType,jdbcType=SMALLINT},
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
        create_by = #{record.createBy,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.education.system_edu.pojo.SysModelClassAssignment">
        update sys_model_class_assignment
        <set>
            <if test="classCode != null">
                class_code = #{classCode,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="context != null">
                context = #{context,jdbcType=VARCHAR},
            </if>
            <if test="sysCollegeNodeCode != null">
                sys_college_node_code = #{sysCollegeNodeCode,jdbcType=VARCHAR},
            </if>
            <if test="sysCollegeNodeType != null">
                sys_college_node_type = #{sysCollegeNodeType,jdbcType=SMALLINT},
            </if>
            <if test="starttime != null">
                starttime = #{starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                endTime = #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where code = #{code,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.education.system_edu.pojo.SysModelClassAssignment">
    update sys_model_class_assignment
    set class_code = #{classCode,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      context = #{context,jdbcType=VARCHAR},
      sys_college_node_code = #{sysCollegeNodeCode,jdbcType=VARCHAR},
      sys_college_node_type = #{sysCollegeNodeType,jdbcType=SMALLINT},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>