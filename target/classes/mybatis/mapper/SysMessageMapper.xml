<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.system_edu.mapper.SysMessageMapper">
  <resultMap id="BaseResultMap" type="com.education.system_edu.pojo.SysMessage">
    <id column="code" jdbcType="VARCHAR" property="code" />
    <result column="send_code" jdbcType="VARCHAR" property="sendCode" />
    <result column="send_sys_role_node_code" jdbcType="VARCHAR" property="sendSysRoleNodeCode" />
    <result column="accept_code" jdbcType="VARCHAR" property="acceptCode" />
    <result column="accept_sys_role_node_code" jdbcType="VARCHAR" property="acceptSysRoleNodeCode" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    code, send_code, send_sys_role_node_code, accept_code, accept_sys_role_node_code, 
    title, context, remarks, create_by, create_date, update_by, update_date
  </sql>
  <select id="selectByExample" parameterType="com.education.system_edu.pojo.SysMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_message
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_message
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.education.system_edu.pojo.SysMessageExample">
    delete from sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.education.system_edu.pojo.SysMessage">
    insert into sys_message (code, send_code, send_sys_role_node_code, 
      accept_code, accept_sys_role_node_code, title, 
      context, remarks, create_by, 
      create_date, update_by, update_date
      )
    values (#{code,jdbcType=VARCHAR}, #{sendCode,jdbcType=VARCHAR}, #{sendSysRoleNodeCode,jdbcType=VARCHAR}, 
      #{acceptCode,jdbcType=VARCHAR}, #{acceptSysRoleNodeCode,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{context,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.education.system_edu.pojo.SysMessage">
    insert into sys_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="sendCode != null">
        send_code,
      </if>
      <if test="sendSysRoleNodeCode != null">
        send_sys_role_node_code,
      </if>
      <if test="acceptCode != null">
        accept_code,
      </if>
      <if test="acceptSysRoleNodeCode != null">
        accept_sys_role_node_code,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="sendCode != null">
        #{sendCode,jdbcType=VARCHAR},
      </if>
      <if test="sendSysRoleNodeCode != null">
        #{sendSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="acceptCode != null">
        #{acceptCode,jdbcType=VARCHAR},
      </if>
      <if test="acceptSysRoleNodeCode != null">
        #{acceptSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.education.system_edu.pojo.SysMessageExample" resultType="java.lang.Long">
    select count(*) from sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_message
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.sendCode != null">
        send_code = #{record.sendCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sendSysRoleNodeCode != null">
        send_sys_role_node_code = #{record.sendSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptCode != null">
        accept_code = #{record.acceptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptSysRoleNodeCode != null">
        accept_sys_role_node_code = #{record.acceptSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_message
    set code = #{record.code,jdbcType=VARCHAR},
      send_code = #{record.sendCode,jdbcType=VARCHAR},
      send_sys_role_node_code = #{record.sendSysRoleNodeCode,jdbcType=VARCHAR},
      accept_code = #{record.acceptCode,jdbcType=VARCHAR},
      accept_sys_role_node_code = #{record.acceptSysRoleNodeCode,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      context = #{record.context,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.education.system_edu.pojo.SysMessage">
    update sys_message
    <set>
      <if test="sendCode != null">
        send_code = #{sendCode,jdbcType=VARCHAR},
      </if>
      <if test="sendSysRoleNodeCode != null">
        send_sys_role_node_code = #{sendSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="acceptCode != null">
        accept_code = #{acceptCode,jdbcType=VARCHAR},
      </if>
      <if test="acceptSysRoleNodeCode != null">
        accept_sys_role_node_code = #{acceptSysRoleNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.education.system_edu.pojo.SysMessage">
    update sys_message
    set send_code = #{sendCode,jdbcType=VARCHAR},
      send_sys_role_node_code = #{sendSysRoleNodeCode,jdbcType=VARCHAR},
      accept_code = #{acceptCode,jdbcType=VARCHAR},
      accept_sys_role_node_code = #{acceptSysRoleNodeCode,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>